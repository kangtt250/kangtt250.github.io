I"Ö<p>This chapter covers the basics of content creation with Hydejack.</p>

<h2 class="no_toc" id="table-of-contents">Table of Contents</h2>

<ol id="markdown-toc">
  <li><a href="#adding-a-page" id="markdown-toc-adding-a-page">Adding a page</a></li>
  <li><a href="#adding-an-entry-to-the-sidebar" id="markdown-toc-adding-an-entry-to-the-sidebar">Adding an entry to the sidebar</a>    <ol>
      <li><a href="#adding-a-link-to-an-external-page-to-the-sidebar" id="markdown-toc-adding-a-link-to-an-external-page-to-the-sidebar">Adding a link to an external page to the sidebar</a></li>
    </ol>
  </li>
  <li><a href="#adding-a-category-or-tag" id="markdown-toc-adding-a-category-or-tag">Adding a category or tag</a>    <ol>
      <li><a href="#recap-categories-and-tags-in-jekyll" id="markdown-toc-recap-categories-and-tags-in-jekyll">Recap: Categories and tags in Jekyll</a></li>
      <li><a href="#categories-and-tags-in-hydejack" id="markdown-toc-categories-and-tags-in-hydejack">Categories and tags in Hydejack</a></li>
      <li><a href="#creating-a-new-category-or-tag" id="markdown-toc-creating-a-new-category-or-tag">Creating a new category or tag</a></li>
    </ol>
  </li>
  <li><a href="#adding-an-about-page" id="markdown-toc-adding-an-about-page">Adding an about page</a></li>
  <li><a href="#adding-a-cover-page" id="markdown-toc-adding-a-cover-page">Adding a cover page</a></li>
  <li><a href="#customization" id="markdown-toc-customization">Customization</a>    <ol>
      <li><a href="#adding-custom-css" id="markdown-toc-adding-custom-css">Adding custom CSS</a></li>
      <li><a href="#adding-custom-html-to-the-head" id="markdown-toc-adding-custom-html-to-the-head">Adding custom HTML to the head</a></li>
      <li><a href="#adding-custom-html-to-the-body" id="markdown-toc-adding-custom-html-to-the-body">Adding custom HTML to the body</a></li>
    </ol>
  </li>
  <li><a href="#adding-a-welcome-page" id="markdown-toc-adding-a-welcome-page">Adding a welcome page*</a></li>
  <li><a href="#adding-a-projects-page" id="markdown-toc-adding-a-projects-page">Adding a projects page*</a></li>
  <li><a href="#adding-a-project" id="markdown-toc-adding-a-project">Adding a project*</a></li>
  <li><a href="#adding-a-resume" id="markdown-toc-adding-a-resume">Adding a resume*</a>    <ol>
      <li><a href="#adding-a-specialized-resume-or-multiple-resumes" id="markdown-toc-adding-a-specialized-resume-or-multiple-resumes">Adding a specialized resume or multiple resumes</a></li>
    </ol>
  </li>
</ol>

<h2 id="adding-a-page">Adding a page</h2>
<p>You can add generic pages that support markdown content but aren‚Äôt blog posts.
For example, this documentation is written in markdown, consisting of several generic pages.</p>

<p>To add a page, create a new markdown file and put <code class="language-plaintext highlighter-rouge">layout: page</code> in a front matter</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">page</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Documentation</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Now you can add content as you would in a blog post.</p>

<h2 id="adding-an-entry-to-the-sidebar">Adding an entry to the sidebar</h2>
<p>To add links to the sidebar, populate the <code class="language-plaintext highlighter-rouge">menu</code> entry in <code class="language-plaintext highlighter-rouge">_config.yml</code> with a list of <code class="language-plaintext highlighter-rouge">title</code>-<code class="language-plaintext highlighter-rouge">url</code> pairs, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: _config.yml</span>
<span class="na">menu</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Blog</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/blog/</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Projects</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/projects/</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">Resume</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/resume/</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s">About</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">/about/</span>
</code></pre></div></div>

<h3 id="adding-a-link-to-an-external-page-to-the-sidebar">Adding a link to an external page to the sidebar</h3>
<p>To add links to external sites, simply provide a fully qualified URL, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">menu</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">@qwtel"</span>
    <span class="na">url</span><span class="pi">:</span>   <span class="s">https://qwtel.com/</span>
</code></pre></div></div>

<h2 id="adding-a-category-or-tag">Adding a category or tag</h2>
<p>Hydejack allows you to use the <code class="language-plaintext highlighter-rouge">list</code> layout to show all posts of a particular category or tag.</p>

<p>Before you start, make sure your config files contains the <code class="language-plaintext highlighter-rouge">features_categories</code> and <code class="language-plaintext highlighter-rouge">featured_tags</code> collections:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: _config.yml</span>
<span class="na">collections</span><span class="pi">:</span>
  <span class="na">featured_categories</span><span class="pi">:</span>
    <span class="na">permalink</span><span class="pi">:</span>         <span class="s">/:name/</span>
    <span class="na">output</span><span class="pi">:</span>            <span class="no">true</span>
  <span class="na">featured_tags</span><span class="pi">:</span>
    <span class="na">permalink</span><span class="pi">:</span>         <span class="s">/tag-:name/</span>
    <span class="na">output</span><span class="pi">:</span>            <span class="no">true</span>
</code></pre></div></div>

<h3 id="recap-categories-and-tags-in-jekyll">Recap: Categories and tags in Jekyll</h3>
<p>Posts in Jekyll can belong to one or more categories, as well as one or more tags. They are defined in a post‚Äôs front matter:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span>     <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span>      <span class="s">Welcome to Jekyll</span>
<span class="na">categories</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">jekyll</span><span class="pi">,</span> <span class="nv">update</span><span class="pi">]</span>
<span class="na">tags</span><span class="pi">:</span>       <span class="pi">[</span><span class="nv">jekyll</span><span class="pi">,</span> <span class="nv">update</span><span class="pi">]</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Posts can also be assigned to a category based on their position within the folder structure, e.g.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>‚îú‚îÄ‚îÄ jekyll
‚îÇ   ‚îî‚îÄ‚îÄ update
‚îÇ       ‚îî‚îÄ‚îÄ _posts
‚îÇ           ‚îî‚îÄ‚îÄ 2017-04-07-welcome-to-jekyll.markdown
</code></pre></div></div>

<p>This will place ‚ÄúWelcome to Jekyll‚Äù in the categories <code class="language-plaintext highlighter-rouge">jekyll</code> and <code class="language-plaintext highlighter-rouge">update</code>.</p>

<p class="message"><strong>NOTE</strong>: This is now the preferred way of assigning categories in Hydejack, as it makes URLs correspond more naturally to the underlying folder structure.</p>

<p>Whether you use this method or not, categories will always be part of a posts URL, while tags will not.</p>

<table class="scroll-table-small">
  <thead>
    <tr>
      <th>Type</th>
      <th>URL</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Categories</td>
      <td><code class="language-plaintext highlighter-rouge">/jekyll/update/2017-04-07-welcome-to-jekyll/</code></td>
    </tr>
    <tr>
      <td>Tags</td>
      <td><code class="language-plaintext highlighter-rouge">/2017-04-07-welcome-to-jekyll/</code></td>
    </tr>
  </tbody>
</table>

<p>As far as Jekyll is concerned, this is the only difference.</p>

<h3 id="categories-and-tags-in-hydejack">Categories and tags in Hydejack</h3>
<p>Categories and tags are displayed by Hydejack below the title, after the date. Categories are displayed with the preposition ‚Äúin‚Äù, while tags are displayed with the preposition ‚Äúon‚Äù, e.g.</p>

<table class="scroll-table-small">
  <thead>
    <tr>
      <th>Type</th>
      <th>Title</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Categories</td>
      <td>Welcome to Jekyll¬¨ 07 Apr 2017 <strong>in</strong> Jekyll / Update</td>
    </tr>
    <tr>
      <td>Tags</td>
      <td>Welcome to Jekyll¬¨ 07 Apr 2017 <strong>on</strong> Jekyll, Update</td>
    </tr>
    <tr>
      <td>Both</td>
      <td>Welcome to Jekyll¬¨ 07 Apr 2017 <strong>in</strong> Jekyll / Update <strong>on</strong> Jekyll, Update</td>
    </tr>
  </tbody>
</table>

<p>You can adjust these in <a href="https://github.com/qwtel/hydejack/blob/v8/_data/strings.yml"><code class="language-plaintext highlighter-rouge">_data/string.yml</code></a>.</p>

<h3 id="creating-a-new-category-or-tag">Creating a new category or tag</h3>
<p>By default, categories and tags are rendered as plain text. Further steps are necessary if you want them to link to a page that contains a list of all posts that belong to that category or tag.</p>

<p>For each featured category or tag, a file called <code class="language-plaintext highlighter-rouge">&lt;category-name&gt;.md</code> or <code class="language-plaintext highlighter-rouge">&lt;tag-name&gt;.md</code> has to be created inside the <code class="language-plaintext highlighter-rouge">_featured_tags</code> and <code class="language-plaintext highlighter-rouge">_featured_categories</code> folders, respectively. Each file in these folders is part of a <a href="https://jekyllrb.com/docs/collections/">Jekyll Collection</a>.</p>

<p>The meta data of a category or tag is set in the files front matter, e.g.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: _featured_categories/hyde.md</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">list</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Hyde</span>
<span class="na">slug</span><span class="pi">:</span>   <span class="s">hyde</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">Hyde is a brazen two-column [Jekyll](http://jekyllrb.com) theme.</span>
  <span class="s">It's based on [Poole](http://getpoole.com), the Jekyll butler.</span>
<span class="s">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">layout</code></dt>
  <dd>Must be <code class="language-plaintext highlighter-rouge">list</code></dd>
  <dt><code class="language-plaintext highlighter-rouge">title</code></dt>
  <dd>Used as title of the page, as well as name of the category or tag as part of the line below a blog post‚Äôs title. Can be different from the name of the tag or category, as long as <code class="language-plaintext highlighter-rouge">slug</code> is identical to the name.</dd>
  <dt><code class="language-plaintext highlighter-rouge">slug</code></dt>
  <dd>Must be identical to the key used in the blog‚Äôs front matter, i.e. if you use <code class="language-plaintext highlighter-rouge">categories: [jekyll]</code> the <code class="language-plaintext highlighter-rouge">slug</code> must be <code class="language-plaintext highlighter-rouge">jekyll</code>. By default, the slug is derived from the title, but here it is recommended that you set it explicitly.</dd>
  <dt><code class="language-plaintext highlighter-rouge">description</code></dt>
  <dd>A medium-length description, used on the tag or category‚Äôs detail page and shown in a message box below the title.</dd>
  <dt><code class="language-plaintext highlighter-rouge">menu</code></dt>
  <dd>Set to to <code class="language-plaintext highlighter-rouge">true</code> if you want the category or tag to appear in the sidebar. For more information, see <a href="#adding-an-entry-to-the-sidebar">Adding an entry to the sidebar</a>.</dd>
</dl>

<p>Once the file is created, the page can be found at <code class="language-plaintext highlighter-rouge">/category/&lt;categoryname&gt;/</code> or <code class="language-plaintext highlighter-rouge">/tag/&lt;tagname&gt;/</code>.</p>

<h2 id="adding-an-about-page">Adding an about page</h2>
<p>About pages are a frequent use case, so Hydejack has a special layout for it. It is a slight modification of the <code class="language-plaintext highlighter-rouge">page</code> layout that allows showing the author information by adding the <code class="language-plaintext highlighter-rouge">&lt;!--author--&gt;</code> marker somewhere on the page.</p>

<p>To create an about page, make sure <code class="language-plaintext highlighter-rouge">layout</code> is set to <code class="language-plaintext highlighter-rouge">about</code>.
For more on authors, see <a href="config.md#adding-an-author">Adding an author</a>.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: about.md</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">about</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">About</span>
<span class="nn">---</span>
</code></pre></div></div>

<h2 id="adding-a-cover-page">Adding a cover page</h2>
<p>Hydejack 8 introduces cover pages, i.e. pages witht he sidebar opened, so that it spans the entire screen. This feature is intended for landing pages. To enable it on a page, simply add <code class="language-plaintext highlighter-rouge">cover: true</code> to the front matter.</p>

<p><img src="/assets/img/blog/hydejack-8@0,5x.png" alt="Cover page example" data-width="960" data-height="540" /></p>

<h2 id="customization">Customization</h2>
<h3 id="adding-custom-css">Adding custom CSS</h3>
<p>The quickest and safest way to add custom CSS to Hydejack is via the <code class="language-plaintext highlighter-rouge">_sass/my-inline.scss</code> and <code class="language-plaintext highlighter-rouge">_sass/my-style.scss</code> files (create the folder/the files if they don‚Äôt exist).</p>

<p>To add CSS that gets inlined into the page, i.e. is loaded with the first request, put the CSS rules into <code class="language-plaintext highlighter-rouge">my-inline.scss</code>. This is intended for above-the-fold content. Otherwise put the CSS rules into <code class="language-plaintext highlighter-rouge">my-style.scss</code>.
Note that this distinction has no effect when <code class="language-plaintext highlighter-rouge">no_inline_css</code> is enabled.</p>

<h3 id="adding-custom-html-to-the-head">Adding custom HTML to the head</h3>
<p>To add custom HTML elements to the <code class="language-plaintext highlighter-rouge">&lt;head&gt;</code> of the document, open <code class="language-plaintext highlighter-rouge">_includes/my-head.html</code> (create the folder/the files if they don‚Äôt exist) and add your elements there.</p>

<h3 id="adding-custom-html-to-the-body">Adding custom HTML to the body</h3>
<p>To add custom HTML elements to the <code class="language-plaintext highlighter-rouge">&lt;body&gt;</code> of the document, open <code class="language-plaintext highlighter-rouge">_includes/my-body.html</code> (create the folder/the files if they don‚Äôt exist) and add your elements there.</p>

<dl>
  <dt>What‚Äôs the difference to <code class="language-plaintext highlighter-rouge">my-scripts.html</code>?</dt>
  <dd>This file was used in earlier versions of Hydejack to accomplish the same goal. However, there are still instances were you might want to prefer <code class="language-plaintext highlighter-rouge">my-scripts.html</code> over <code class="language-plaintext highlighter-rouge">my-body.html</code>, as it won‚Äôt load scrips on redirect pages and will be ignored by browsers &lt; IE10.</dd>
</dl>

<h2 id="adding-a-welcome-page">Adding a welcome page*</h2>
<p>If you bought the PRO version of Hydejack you have access to the <code class="language-plaintext highlighter-rouge">welcome</code> layout.
It is intended to showcase your projects and blog posts in a compact way.
Technically, it is a modified version of the <code class="language-plaintext highlighter-rouge">about</code> layout, so it allows showing the author information where the <code class="language-plaintext highlighter-rouge">&lt;!--author--&gt;</code> marker is put. <a href="https://hydejack.com/">Demo</a>.</p>

<p>You can create a welcome page by creating a new markdown file and setting the layout to <code class="language-plaintext highlighter-rouge">welcome</code> in the front matter.</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: index.md</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">welcome</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Welcome</span>
<span class="na">cover</span><span class="pi">:</span>  <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<p>Without further configuration, the welcome page will just look like a regular page.
To show the two most recent projects, add the <code class="language-plaintext highlighter-rouge">&lt;!--projects--&gt;</code> marker to the content.
To show the five most recent blog posts, add the <code class="language-plaintext highlighter-rouge">&lt;!--posts--&gt;</code> marker to the content.</p>

<p>The welcome layout also supports selecting specific projects and posts, by adding to the front matter, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: index.md</span>
<span class="na">selected_projects</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">_projects/hydejack-v6.md</span>
  <span class="pi">-</span> <span class="s">_projects/hyde-v2.md</span>
<span class="na">more_projects</span><span class="pi">:</span> <span class="s">projects.md</span>
<span class="na">selected_posts</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">_posts/2017-05-03-javascripten.md</span>
  <span class="pi">-</span> <span class="s">_posts/2012-02-07-example-content.md</span>
<span class="na">more_posts</span><span class="pi">:</span> <span class="s">posts.md</span>
<span class="na">featured</span><span class="pi">:</span> <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">selected_projects</code></dt>
  <dd>A list of paths to project files that should be displayed below the main content of the page.
The paths are relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">./</code>.
If no paths are provided, the two most recent projects will be used.</dd>
  <dt><code class="language-plaintext highlighter-rouge">more_projects</code></dt>
  <dd>The path to the main projects page.
The path is relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">./</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">selected_projects</code></dt>
  <dd>A list of paths to blog posts that should be featured on the welcome page.
The paths are relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">./</code>.
If no paths are provided, the five most recent posts will be used.</dd>
  <dt><code class="language-plaintext highlighter-rouge">more_posts</code></dt>
  <dd>The path to the main posts page.
The path is relative to the main directory with no leading <code class="language-plaintext highlighter-rouge">./</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">featured</code></dt>
  <dd>Optional. When <code class="language-plaintext highlighter-rouge">true</code>, project thumbnails will span the full width instead of half.
This setting takes precedence over the <code class="language-plaintext highlighter-rouge">featured</code> value of individual projects,
i.e. it will apply to the entire page.</dd>
</dl>

<h2 id="adding-a-projects-page">Adding a projects page*</h2>
<p>The projects page will show all projects in a particular collection.
First, you need to make sure that you have the <code class="language-plaintext highlighter-rouge">projects</code> collection defined in <code class="language-plaintext highlighter-rouge">_config.yml</code>:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># file: _config.yml</span>
<span class="na">collections</span><span class="pi">:</span>
  <span class="na">projects</span><span class="pi">:</span>
    <span class="na">permalink</span><span class="pi">:</span> <span class="s">/projects/:path/</span>
    <span class="na">output</span><span class="pi">:</span>    <span class="no">true</span>
</code></pre></div></div>

<p>Next, add a <code class="language-plaintext highlighter-rouge">projects.md</code> to in the root (you can adjust the name/location to match the <code class="language-plaintext highlighter-rouge">permalink</code> of the
collection).
This file has the <code class="language-plaintext highlighter-rouge">projects</code> layout (mind the ‚Äús‚Äù at the end) and should have a <code class="language-plaintext highlighter-rouge">show_collection</code> key,
with the name of the collection as a value, e.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: projects.md</span>
<span class="na">layout</span><span class="pi">:</span>          <span class="s">projects</span>
<span class="na">title</span><span class="pi">:</span>           <span class="s">Projects*</span>
<span class="na">show_collection</span><span class="pi">:</span> <span class="s">projects</span>
<span class="na">featured</span><span class="pi">:</span>        <span class="no">true</span>
<span class="nn">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">layout</code></dt>
  <dd>Must be <code class="language-plaintext highlighter-rouge">projects</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">title</code></dt>
  <dd>The title of the page. Note that this name is reused as part of each individual project page
(for the link that directs back to the projects page).</dd>
  <dt><code class="language-plaintext highlighter-rouge">show_collection</code></dt>
  <dd>The name of the collection you want display on this page. Defaults to <code class="language-plaintext highlighter-rouge">projects</code>.</dd>
  <dt><code class="language-plaintext highlighter-rouge">featured</code></dt>
  <dd>Optional. When <code class="language-plaintext highlighter-rouge">true</code>, project thumbnails will span the full width, instead of only half.
This setting takes precedence over the <code class="language-plaintext highlighter-rouge">featured</code> value of individual projects,
i.e. it will apply to the entire page.</dd>
</dl>

<h2 id="adding-a-project">Adding a project*</h2>
<p>Projects are organized using <a href="https://jekyllrb.com/docs/collections/">Jekyll Collections</a>.
Each project generates an entry on the projects layout (<a href="https://hydejack.com/projects/">Demo</a>) as well as its own detail page (<a href="https://hydejack.com/projects/default/">Demo</a>).</p>

<p>Each project is defined by a file in the <code class="language-plaintext highlighter-rouge">_projects</code> directory.
The project‚Äôs meta information is defined in the file‚Äôs front matter. You can also add markdown content.
A project‚Äôs front matter should look like:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: _projects/hyde-v2.md</span>
<span class="na">layout</span><span class="pi">:</span>      <span class="s">project</span>
<span class="na">title</span><span class="pi">:</span>       <span class="s">Hyde v2*</span>
<span class="na">date</span><span class="pi">:</span>        <span class="s">2 Jan </span><span class="m">2014</span>
<span class="na">screenshot</span><span class="pi">:</span>
  <span class="na">src</span><span class="pi">:</span>       <span class="s">/assets/img/projects/hyde-v2@0,25x.jpg</span>
  <span class="na">srcset</span><span class="pi">:</span>
    <span class="na">1920w</span><span class="pi">:</span>   <span class="s">/assets/img/projects/hyde-v2.jpg</span>
    <span class="na">960w</span><span class="pi">:</span>    <span class="s">/assets/img/projects/hyde-v2@0,5x.jpg</span>
    <span class="na">480w</span><span class="pi">:</span>    <span class="s">/assets/img/projects/hyde-v2@0,25x.jpg</span>
<span class="na">caption</span><span class="pi">:</span>     <span class="s">Hyde is a brazen two-column Jekyll theme.</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">Hyde is a brazen two-column [Jekyll](http://jekyllrb.com) theme.</span>
  <span class="s">It's based on [Poole](http://getpoole.com), the Jekyll butler.</span>
<span class="na">links</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span>   <span class="s">Demo</span>
    <span class="na">url</span><span class="pi">:</span>     <span class="s">http://hyde.getpoole.com</span>
  <span class="pi">-</span> <span class="na">title</span><span class="pi">:</span>   <span class="s">Source</span>
    <span class="na">url</span><span class="pi">:</span>     <span class="s">https://github.com/poole/hyde</span>
<span class="na">featured</span><span class="pi">:</span>    <span class="no">false</span>
<span class="nn">---</span>
</code></pre></div></div>

<dl>
  <dt><code class="language-plaintext highlighter-rouge">layout</code></dt>
  <dd>Must be set to <code class="language-plaintext highlighter-rouge">project</code></dd>
  <dt><code class="language-plaintext highlighter-rouge">date</code></dt>
  <dd>Providing a year is the minimum requirement. Used to sort the projects.</dd>
  <dt><code class="language-plaintext highlighter-rouge">screenshot</code></dt>
  <dd>A 16:9 screenshot of the project.

    <p>You can pass an URL to an image, but it is recommended that you provide a <code class="language-plaintext highlighter-rouge">src</code>-<code class="language-plaintext highlighter-rouge">srcset</code> pair (see example above).</p>

    <p>Hydejack will show the screenshot in various sizes, depending on the screen width, so that no specific size will fit all. Instead, it is recommended that you use a <a href="https://en.wikipedia.org/wiki/Mipmap">mipmap</a>-like approach, providing the image in multiple sizes, each image half the width of the previous one.
The <code class="language-plaintext highlighter-rouge">src</code> key is a fallback image for browsers that don‚Äôt support the <code class="language-plaintext highlighter-rouge">srcset</code> attribute. The keys of the <code class="language-plaintext highlighter-rouge">srcset</code> hash will be used as descriptors.</p>

    <p>For more information on <code class="language-plaintext highlighter-rouge">srcset</code>, see the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset">documentation at MDN</a>, or <a href="https://css-tricks.com/responsive-images-youre-just-changing-resolutions-use-srcset/">this article from CSS-Tricks</a>.</p>
  </dd>
  <dt><code class="language-plaintext highlighter-rouge">caption</code></dt>
  <dd>A short description, shown as part of each ‚Äúproject card‚Äù in the <code class="language-plaintext highlighter-rouge">projects</code> layout.</dd>
  <dt><code class="language-plaintext highlighter-rouge">description</code></dt>
  <dd>A medium-length description, used on the project‚Äôs detail page as meta description and shown as message box below the screenshot.</dd>
  <dt><code class="language-plaintext highlighter-rouge">links</code></dt>
  <dd>A list of <code class="language-plaintext highlighter-rouge">title</code>-<code class="language-plaintext highlighter-rouge">url</code> pairs that link to external resources related to this project.</dd>
  <dt><code class="language-plaintext highlighter-rouge">author</code></dt>
  <dd>Optional. The author shown below the project, similar to posts.</dd>
  <dt><code class="language-plaintext highlighter-rouge">featured</code></dt>
  <dd>Optional. When <code class="language-plaintext highlighter-rouge">true</code>, the project preview will span the full content width. You can use this for projects that should receive more attention. You can set/override this for an entire page, by setting <code class="language-plaintext highlighter-rouge">featured</code> in the front matter (applies to the <code class="language-plaintext highlighter-rouge">projects</code> and <code class="language-plaintext highlighter-rouge">welcome</code> layout).</dd>
</dl>

<h2 id="adding-a-resume">Adding a resume*</h2>
<p>Hydejack‚Äôs PRO version features a generalized resume layout.
<a href="https://hydejack.com/resume/">Demo</a>.</p>

<p>It generates the resume page from a valid <a href="https://jsonresume.org/">JSON Resume</a>, which is good news if you already have a JSON resume. Otherwise, there are various ways of obtaining one:</p>

<ul>
  <li>You can edit the <a href="https://github.com/qwtel/hydejack/blob/v8/_data/resume.yml">example <code class="language-plaintext highlighter-rouge">resume.yml</code></a> in <code class="language-plaintext highlighter-rouge">_data</code> directly. It contains example entries for each type of entry.</li>
  <li>You can use the visual <a href="http://registry.jsonresume.org/">JSON Resume Editor</a>.</li>
  <li>If you have a LinkedIn profile, you can try <a href="https://jmperezperez.com/linkedin-to-json-resume/">LinkedIn to Json R√©sum√©</a>.</li>
</ul>

<p>Once you have a JSON Resume, place it into <code class="language-plaintext highlighter-rouge">_data</code>.</p>

<p>To render a resume page, create a new markdown file and set the layout to <code class="language-plaintext highlighter-rouge">resume</code> in the front matter:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: resume.md</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">resume</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Resume</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">A short description of the page for search engines (~150 characters long).</span>
<span class="s">---</span>
</code></pre></div></div>

<p class="message"><strong>NOTE</strong>: You can download the final <code class="language-plaintext highlighter-rouge">resume.json</code> (minified) from the assets folder. When running locally, you can find it at <code class="language-plaintext highlighter-rouge">_site/assets/resume.json</code>.</p>

<h3 id="adding-a-specialized-resume-or-multiple-resumes">Adding a specialized resume or multiple resumes</h3>
<p>You can add a specialized resume or multiple resumes by adding the resume YAML to the front matter under the <code class="language-plaintext highlighter-rouge">resume</code> key.
E.g.:</p>

<div class="language-yml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="c1"># file: resume.md</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">resume</span>
<span class="na">title</span><span class="pi">:</span>  <span class="s">Resume</span>
<span class="na">description</span><span class="pi">:</span> <span class="pi">&gt;</span>
  <span class="s">A short description of the page for search engines (~150 characters long).</span>
<span class="na">resume</span><span class="pi">:</span>
  <span class="na">basics</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Richard</span><span class="nv"> </span><span class="s">Hendricks"</span>
    <span class="na">label</span><span class="pi">:</span> <span class="s2">"</span><span class="s">Programmer"</span>
    <span class="na">picture</span><span class="pi">:</span> <span class="s2">"</span><span class="s">/assets/icons/icon.png"</span>
  <span class="c1"># ...</span>
<span class="nn">---</span>
</code></pre></div></div>

<p class="read-more">Continue with <a href="writing.md" class="heading flip-title">Writing</a></p>

:ET